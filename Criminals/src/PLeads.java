
import java.sql.*;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author admin
 */
public class PLeads extends javax.swing.JFrame {
    private int id;
    private Connection conn;
    String leadList;
    /**
     * Creates new form PLeads
     */
    public PLeads() {
        initComponents();
    }
    PLeads(int id,Connection conn){
        this.id = id;
        this.conn = conn;
        initComponents();
        
        try (Statement st = conn.createStatement()) {
            String query = "Select * from LEADS;";
            ResultSet rs = st.executeQuery(query);
            DefaultTableModel model = (DefaultTableModel)lTable.getModel();
            model.setRowCount(0);
            leadList = "";
            while(rs.next()){
                String leadid = rs.getString("lead_id");
                String citizen = rs.getString("citizen_id");
                String ipc = rs.getString("ipc");
                String desc = rs.getString("description");
                String date = rs.getString("report_date");
                String location = rs.getString("location");
                String valid = rs.getString("authority_validation");
                model.addRow(new Object[]{leadid, citizen, ipc, desc, date, location, valid});
                leadList = leadList + ", " +  leadid;
            }
            rs.close();
        }
        catch(SQLException err){
            Logger.getLogger(PLeads.class.getName()).log(Level.SEVERE, null, err);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filterButton = new javax.swing.JButton();
        filterLabel = new javax.swing.JLabel();
        lnameLabel = new javax.swing.JLabel();
        ipc_crime = new javax.swing.JTextField();
        addressLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lTable = new javax.swing.JTable();
        validation = new javax.swing.JTextField();
        phoneLabel = new javax.swing.JLabel();
        location = new javax.swing.JTextField();
        update = new javax.swing.JButton();
        addressLabel1 = new javax.swing.JLabel();
        uvalid = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        filterButton.setText("Search");
        filterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterButtonActionPerformed(evt);
            }
        });

        filterLabel.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        filterLabel.setText("Search by");
        filterLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lnameLabel.setText("IPC of crime");

        ipc_crime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ipc_crimeActionPerformed(evt);
            }
        });

        addressLabel.setText("Validation");

        lTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Lead ID", "Citizen ID", "IPC", "Description", "Date", "Location", "Validation"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(lTable);

        validation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validationActionPerformed(evt);
            }
        });

        phoneLabel.setText("Location");

        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        addressLabel1.setText("Enter new validation : ");

        uvalid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uvalidActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(352, 352, 352)
                .addComponent(filterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(105, Short.MAX_VALUE)
                .addComponent(addressLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(uvalid, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(161, 161, 161)
                .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(155, 155, 155))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(15, 15, 15)
                    .addComponent(filterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(787, 787, 787))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 885, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(addressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(validation, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(24, 24, 24)
                            .addComponent(lnameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(ipc_crime, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(48, 48, 48)
                            .addComponent(phoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(location, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(filterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 328, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addressLabel1)
                        .addComponent(uvalid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(filterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(23, 23, 23)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lnameLabel)
                        .addComponent(ipc_crime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(location, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(phoneLabel)
                        .addComponent(addressLabel)
                        .addComponent(validation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(84, 84, 84)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void filterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterButtonActionPerformed
        // TODO add your handling code here:
        try {
            String crime = "%"+ipc_crime.getText()+"%";
            String val = "%"+validation.getText()+"%";
            String loca = "%"+location.getText()+"%";
            Statement st = conn.createStatement();
            String query = String.format("SELECT * from LEADS WHERE ipc LIKE '%s' AND "
                + "authority_validation LIKE '%s' AND location LIKE '%s';", crime, val, loca);
            System.out.println(query);
            ResultSet rs = st.executeQuery(query);
            DefaultTableModel model = (DefaultTableModel)lTable.getModel();
            model.setRowCount(0);
            leadList = "";
            while(rs.next()){
                String leadid = rs.getString("lead_id");
                String citizen = rs.getString("citizen_id");
                String ipc = rs.getString("ipc");
                String desc = rs.getString("description");
                String date = rs.getString("report_date");
                String location = rs.getString("location");
                String valid = rs.getString("authority_validation");
                model.addRow(new Object[]{leadid, citizen, ipc, desc, date, location, valid});
                leadList = leadList + ", " +  leadid;
            }
            rs.close();
            st.close();
        } catch (SQLException ex) {
            Logger.getLogger(PLeads.class.getName()).log(Level.SEVERE, null, ex);
            JFrame f = new JFrame();
            JOptionPane.showMessageDialog(f, "Something went Wrong");
        }
    }//GEN-LAST:event_filterButtonActionPerformed

    private void ipc_crimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ipc_crimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ipc_crimeActionPerformed

    private void validationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_validationActionPerformed

    private void uvalidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uvalidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_uvalidActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        int rowIndex =  lTable.getSelectedRow();
        JFrame f = new JFrame();
        if (rowIndex == -1) {
            JOptionPane.showMessageDialog(f, "Please Select an Entry To Perform This Operation");
        }else if(uvalid.getText().toString().equals(null)){
            JOptionPane.showMessageDialog(f, "Please enter new validation");
        }else {
            int leadid = Integer.parseInt(lTable.getValueAt(rowIndex, 0).toString());
            String vali = uvalid.getText().toString().trim();
            System.out.println(vali);
            String query = String.format("UPDATE leads set authority_validation = '%s' WHERE lead_id = %d;",vali,leadid);
            try {
                    Statement addq = conn.createStatement();
                    addq.executeUpdate(query);
                    JOptionPane.showMessageDialog(f, "Lead updated successfully");
                 }catch (SQLException ex) {
                    Logger.getLogger(citizen_register.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(f, "Could not update lead, try again.");
                }
        }
        try (Statement st = conn.createStatement()) {
            String query = "Select * from LEADS;";
            ResultSet rs = st.executeQuery(query);
            DefaultTableModel model = (DefaultTableModel)lTable.getModel();
            model.setRowCount(0);
            leadList = "";
            while(rs.next()){
                String leadid = rs.getString("lead_id");
                String citizen = rs.getString("citizen_id");
                String ipc = rs.getString("ipc");
                String desc = rs.getString("description");
                String date = rs.getString("report_date");
                String location = rs.getString("location");
                String valid = rs.getString("authority_validation");
                model.addRow(new Object[]{leadid, citizen, ipc, desc, date, location, valid});
                leadList = leadList + ", " +  leadid;
            }
            rs.close();
        }
        catch(SQLException err){
            Logger.getLogger(Leads.class.getName()).log(Level.SEVERE, null, err);
        }
    }//GEN-LAST:event_updateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PLeads.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PLeads.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PLeads.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PLeads.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PLeads().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressLabel;
    private javax.swing.JLabel addressLabel1;
    private javax.swing.JButton filterButton;
    private javax.swing.JLabel filterLabel;
    private javax.swing.JTextField ipc_crime;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable lTable;
    private javax.swing.JLabel lnameLabel;
    private javax.swing.JTextField location;
    private javax.swing.JLabel phoneLabel;
    private javax.swing.JButton update;
    private javax.swing.JTextField uvalid;
    private javax.swing.JTextField validation;
    // End of variables declaration//GEN-END:variables
}
